<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Users', 'doctrine');

/**
 * BaseUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id
 * @property string $first_name
 * @property string $last_name
 * @property string $sex
 * @property string $friends
 * @property integer $friends_count
 * @property timestamp $created_at
 * @property integer $is_active
 * @property Doctrine_Collection $DemographicStat
 * @property Doctrine_Collection $PollComment
 * @property Doctrine_Collection $UsersAnswers
 * 
 * @method string              getId()              Returns the current record's "id" value
 * @method string              getFirstName()       Returns the current record's "first_name" value
 * @method string              getLastName()        Returns the current record's "last_name" value
 * @method string              getSex()             Returns the current record's "sex" value
 * @method string              getFriends()         Returns the current record's "friends" value
 * @method integer             getFriendsCount()    Returns the current record's "friends_count" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method integer             getIsActive()        Returns the current record's "is_active" value
 * @method Doctrine_Collection getDemographicStat() Returns the current record's "DemographicStat" collection
 * @method Doctrine_Collection getPollComment()     Returns the current record's "PollComment" collection
 * @method Doctrine_Collection getUsersAnswers()    Returns the current record's "UsersAnswers" collection
 * @method Users               setId()              Sets the current record's "id" value
 * @method Users               setFirstName()       Sets the current record's "first_name" value
 * @method Users               setLastName()        Sets the current record's "last_name" value
 * @method Users               setSex()             Sets the current record's "sex" value
 * @method Users               setFriends()         Sets the current record's "friends" value
 * @method Users               setFriendsCount()    Sets the current record's "friends_count" value
 * @method Users               setCreatedAt()       Sets the current record's "created_at" value
 * @method Users               setIsActive()        Sets the current record's "is_active" value
 * @method Users               setDemographicStat() Sets the current record's "DemographicStat" collection
 * @method Users               setPollComment()     Sets the current record's "PollComment" collection
 * @method Users               setUsersAnswers()    Sets the current record's "UsersAnswers" collection
 * 
 * @package    ibum
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('id', 'string', 70, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 70,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sex', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('friends', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('friends_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DemographicStat', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('PollComment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UsersAnswers', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}